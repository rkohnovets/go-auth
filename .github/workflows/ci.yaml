name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "registry.hub.docker.com"
  IMAGE_NAME: "rkohnovets/grpc-server-user"
  CONTAINER_NAME: "grpc-server-user"
  CONTAINER_PORT: "50051"
  HOST_PORT: "9090"

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: |
          docker login \
            -u ${{ secrets.REGISTRY_USERNAME }} \
            -p ${{ secrets.REGISTRY_PASSWORD }} \
            $REGISTRY

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build \
            --no-cache --push \
            --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME \
            --file Dockerfile \
            .

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Deploy to cloud server via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME,CONTAINER_PORT,HOST_PORT
          script: |
            # Set up variables
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            
            # Login into image registry
            docker login \
              -u ${{ secrets.REGISTRY_USERNAME }} \
              -p ${{ secrets.REGISTRY_PASSWORD }} \
              $REGISTRY
            
            # Stop running container
            docker stop $CONTAINER_NAME
            
            # Remove old container
            docker rm $CONTAINER_NAME
            
            # Run a new container from a new image
            docker run \
              --detach \
              --publish $HOST_PORT:$CONTAINER_PORT \
              --name $CONTAINER_NAME \
              $REGISTRY/$IMAGE_NAME:$TAG_NAME
